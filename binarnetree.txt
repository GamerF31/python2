from typing import Any, Callable


class BinaryNode(object):
    value: Any
    left_child: 'BinaryNode'
    right_child: 'BinaryNode'
    def __init__(self, data,left_child = None,right_child = None):
        self.left_child = left_child
        self.right_child = right_child
        self.data = data
    def is_leaf(self):
        if self.left_child and self.right_child is None:
            return True
        return False
    def add_left_child(self, data: Any):
        if self.left_child is None:
            self.left_child = BinaryNode(data)
    def add_right_child(self, data: Any):
        if self.right_child is None:
            self.right_child = BinaryNode(data)
    

class BinaryTree:
    root: BinaryNode

    def __init__(self,root):
        self.root = root

btn1 = BinaryNode(1)
btn2 = BinaryNode(2)
btn3 = BinaryNode(3)

btn1.left_child = btn2
btn1.right_child = btn2
print(btn1.data)
print(btn1.left_child.data)